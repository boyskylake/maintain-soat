{"version":3,"sources":["webpack://soat-maintain/./resources/js/src/Officer/pages/Profile/EditProfile.js","webpack://soat-maintain/./resources/js/src/Officer/pages/Profile/Profile.js"],"names":["EditProfile","dispatch","useDispatch","feedData","useSelector","state","useForm","register","handleSubmit","watch","errors","useState","passwordeye","setpasswordeye","coopid","setCoopid","ErrorsWord","Confirm","required","maxLength","NewPassword","PasswordNotMatch","OldPassword","inputEmail","inputName","useScript","useEffect","feedDataAction","services","Services","OnSubmitEditProfile","data","console","log","requestOptions","method","JSON","stringify","API","then","res","rc_code","message","toastr","fontFamily","fetchSuccess","Profile","name","type","email","ErrorSpan","children","className","OnSubmitEditPassword","avatar","Position"],"mappings":"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","file":"js/resources_js_src_Officer_pages_Profile_Profile_js.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { useScript } from \"../../../helpers\";\nimport { feedDataAction } from \"../../redux/actions\";\n\nimport { useForm } from \"react-hook-form\";\nimport Services from \"../../redux/services/services\";\nimport toastr from \"toastr\";\n\nfunction EditProfile() {\n    const dispatch = useDispatch();\n    const feedData = useSelector((state) => state.feedData);\n    const { register, handleSubmit, watch, errors } = useForm();\n    const [passwordeye, setpasswordeye] = useState(false);\n\n    // const [inputs, setInputs] = useState([\"ma_coop\"]);\n    const [coopid, setCoopid] = useState(null);\n    // const [FeedMenu, setFeedMenu] = useState();\n\n    const ErrorsWord = {\n        Confirm: {\n            required: \"กรุณากรอกรหัสผ่าน\",\n            maxLength: \"\",\n        },\n        NewPassword: {\n            required: \"กรุณากรอกรหัสผ่าน\",\n            maxLength: \"\",\n            PasswordNotMatch: \"กรุณากรอกรหัสผ่านให้ตรงกัน\",\n        },\n        OldPassword: {\n            required: \"กรุณากรอกรหัสผ่าน\",\n            maxLength: \"\",\n        },\n        inputEmail: {\n            required: \"กรุณากรอกอีเมล์\",\n            maxLength: \"\",\n        },\n        inputName: {\n            required: \"กรุณากรอกชื่อ\",\n            maxLength: \"\",\n        },\n    };\n\n    // <!-- jvectormap  -->\n    useScript(\"/officer/plugins/jvectormap/jquery-jvectormap-1.2.2.min.js\");\n    useScript(\"/officer/plugins/jvectormap/jquery-jvectormap-world-mill-en.js\");\n    useScript(\"/officer/dist/js/pages/dashboard2.js\");\n\n    useEffect(() => {\n        async function feedData() {\n            await dispatch(\n                feedDataAction.feedDataGet(\"/api/v1/officer/Profile\")\n            );\n        }\n        feedData();\n    }, [dispatch]);\n\n    const services = new Services();\n\n    const OnSubmitEditProfile = (data) => {\n        console.log(data);\n        const requestOptions = {\n            method: \"POST\",\n            data: JSON.stringify(data),\n        };\n\n        services\n            .API(\"/api/v1/officer/Editprofile\", requestOptions)\n            .then((res) => {\n                console.log(res, res && res.rc_code, res && res.message);\n                if (res && res.rc_code == \"1\") {\n                    console.log(\"success1\");\n                    toastr.success(res && res.message, \"Success\", 5000);\n                    // alert(res && res.message)\n                } else {\n                    console.log(\"failse1\");\n                    toastr.error(res && res.message, \"Error\", 5000);\n                    // alert(res && res.message)\n                }\n            });\n    };\n\n\n// const EditProfile = () => {\n    return (\n        <div>\n\n\n            <div className=\"text-gray-600 hover:text-yellow-500 font-black text-3xl mt-5\">Edit Profile</div>\n\n\n\n\n                                    <form\n                                        id=\"pom\"\n                                        className=\"form-horizontal p-10\"\n                                        style={{ fontFamily: \"Kanit\" }}\n                                        onSubmit={handleSubmit(\n                                            OnSubmitEditProfile\n                                        )}\n                                    >\n                                        <div className=\"form-group\">\n                                            <label\n                                                htmlFor=\"inputName\"\n                                                className=\"col-sm-2 control-label text-gray-600 hover:text-yellow-500\"\n                                            >\n                                                Name:\n                                            </label>\n                                            <div className=\"col-sm-10\">\n\n                                                <input\n                                                    ref={register({\n                                                        required: true,\n                                                    })}\n                                                    type=\"name\"\n                                                    className=\"input w-2/4 border mt-2\"\n                                                    id=\"inputName\"\n                                                    name=\"inputName\"\n                                                    placeholder=\"Name\"\n                                                    autoComplete=\"off\"\n                                                    Value={\n                                                        feedData.fetchSuccess &&\n                                                        feedData.data.Profile &&\n                                                        feedData.data.Profile\n                                                            .name\n                                                    }\n                                                ></input>\n                                                {errors.inputName?.type ===\n                                                    \"required\" && (\n                                                    <ErrorSpan className=\"\">\n                                                        {\n                                                            ErrorsWord.inputName\n                                                                .required\n                                                        }\n                                                    </ErrorSpan>\n                                                )}\n                                            </div>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label\n                                                htmlFor=\"inputEmail\"\n                                                className=\"col-sm-2 control-label text-gray-600 hover:text-yellow-500\"\n                                            >\n                                                E-mail:\n                                            </label>\n                                            <div className=\"col-sm-10\">\n                                                <input\n                                                    ref={register({\n                                                        required: true,\n                                                    })}\n                                                    type=\"email\"\n                                                    className=\"input w-2/4 border mt-2\"\n                                                    id=\"inputEmail\"\n                                                    name=\"inputEmail\"\n                                                    placeholder=\"E-mail\"\n                                                    autoComplete=\"off\"\n                                                    Value={\n                                                        feedData.fetchSuccess &&\n                                                        feedData.data.Profile &&\n                                                        feedData.data.Profile\n                                                            .email\n                                                    }\n                                                ></input>\n                                                {errors.inputEmail?.type ===\n                                                    \"required\" && (\n                                                    <ErrorSpan className=\"\">\n                                                        {\n                                                            ErrorsWord\n                                                                .inputEmail\n                                                                .required\n                                                        }\n                                                    </ErrorSpan>\n                                                )}\n                                            </div>\n                                        </div>\n\n                                        <div className=\"form-group\">\n                                            <div className=\"col-sm-offset-2 col-sm-10\">\n                                                <button\n                                                    onClick={() => {\n                                                        console.log(\"คลิกสิ\");\n                                                    }}\n                                                    type=\"submit\"\n                                                    className=\"button bg-theme-1 hover:bg-red-500 text-white mt-5\"\n                                                >\n                                                    Submit\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </form>\n        </div>\n    );\n}\nexport default EditProfile;\n\nconst ErrorSpan = ({ children, className }) => {\n    return (\n        <span className={`text-red-500 hover: text-yellow-500 ${className && className} `}>\n            {\" \"}\n            {children && children}\n        </span>\n    );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { useScript } from \"../../../helpers\";\nimport { feedDataAction } from \"../../redux/actions\";\n\nimport { useForm } from \"react-hook-form\";\nimport Services from \"../../redux/services/services\";\nimport toastr from \"toastr\";\nimport EditProfile from \"./EditProfile\";\n\nfunction Profile() {\n    const dispatch = useDispatch();\n    const feedData = useSelector((state) => state.feedData);\n    const { register, handleSubmit, watch, errors } = useForm();\n    const [passwordeye, setpasswordeye] = useState(false);\n\n    // const [inputs, setInputs] = useState([\"ma_coop\"]);\n    const [coopid, setCoopid] = useState(null);\n    // const [FeedMenu, setFeedMenu] = useState();\n\n    const ErrorsWord = {\n        Confirm: {\n            required: \"กรุณากรอกรหัสผ่าน\",\n            maxLength: \"\",\n        },\n        NewPassword: {\n            required: \"กรุณากรอกรหัสผ่าน\",\n            maxLength: \"\",\n            PasswordNotMatch: \"กรุณากรอกรหัสผ่านให้ตรงกัน\",\n        },\n        OldPassword: {\n            required: \"กรุณากรอกรหัสผ่าน\",\n            maxLength: \"\",\n        },\n        inputEmail: {\n            required: \"กรุณากรอกอีเมล์\",\n            maxLength: \"\",\n        },\n        inputName: {\n            required: \"กรุณากรอกชื่อ\",\n            maxLength: \"\",\n        },\n    };\n\n    // <!-- jvectormap  -->\n    useScript(\"/officer/plugins/jvectormap/jquery-jvectormap-1.2.2.min.js\");\n    useScript(\"/officer/plugins/jvectormap/jquery-jvectormap-world-mill-en.js\");\n    useScript(\"/officer/dist/js/pages/dashboard2.js\");\n\n    useEffect(() => {\n        async function feedData() {\n            await dispatch(\n                feedDataAction.feedDataGet(\"/api/v1/officer/Profile\")\n            );\n        }\n        feedData();\n    }, [dispatch]);\n\n    const services = new Services();\n\n    const OnSubmitEditProfile = (data) => {\n        console.log(data);\n        const requestOptions = {\n            method: \"POST\",\n            data: JSON.stringify(data),\n        };\n\n        services\n            .API(\"/api/v1/officer/Editprofile\", requestOptions)\n            .then((res) => {\n                console.log(res, res && res.rc_code, res && res.message);\n                if (res && res.rc_code == \"1\") {\n                    console.log(\"success1\");\n                    toastr.success(res && res.message, \"Success\", 5000);\n                    // alert(res && res.message)\n                } else {\n                    console.log(\"failse1\");\n                    toastr.error(res && res.message, \"Error\", 5000);\n                    // alert(res && res.message)\n                }\n            });\n    };\n\n    const OnSubmitEditPassword = (data) => {\n        if (data.NewPassword == data.Confirm) {\n            const requestOptions = {\n                method: \"POST\",\n                data: JSON.stringify(data),\n            };\n            console.log(data.NewPassword == data.Confirm);\n\n            services\n                .API(\"/api/v1/officer/Editpassword\", requestOptions)\n                .then((res) => {\n                    if (res && res.rc_code == \"1\") {\n                        console.log(\"success2\");\n                        toastr.success(res && res.message, \"Success\", 5000);\n                        // alert(res && res.message)\n                    } else {\n                        console.log(\"failse2\");\n                        toastr.error(res && res.message, \"Error\", 5000);\n                        // alert(res && res.message)\n                    }\n                });\n        } else {\n            console.log(\"failse2\");\n            toastr.error(\"คอนเฟิร์มรหัสผ่านไม่ถูกต้อง\", \"Error\", 5000);\n        }\n    };\n\n    // console.log(\n    //     feedData.fetchSuccess && feedData.data && feedData.data.Profile\n    // );\n    return (\n        <div className=\"app\">\n            {/* Main content */}\n            <div className=\"intro-y flex items-center mt-8\">\n                <h2 className=\" mr-auto text-gray-600 hover:text-yellow-500 font-black text-3xl\">Profile Layout</h2>\n            </div>\n\n            <div className=\"intro-y box px-8 pt-5 mt-5\" style={{ fontFamily: \"Kanit\" }}>\n                <div className=\"flex flex-col lg:flex-row border-b border-gray-200 pb-5 -mx-5\">\n                    <div className=\"flex flex-1 px-5 items-center justify-center lg:justify-start\">\n                        <div className=\"w-20 h-20 sm:w-24 sm:h-24 flex-none lg:w-32 lg:h-32 image-fit relative transition duration-500 transform hover:-translate-y-1 hover:scale-110\">\n                            <img\n                                className=\"rounded-full\"\n                                src={`/storage/${\n                                    feedData.fetchSuccess &&\n                                    feedData.data.Profile &&\n                                    feedData.data.Profile.avatar\n                                }`}\n                            />\n                        </div>\n\n                        <div className=\"ml-5\">\n                            <div className=\"w-24 sm:w-40 truncate sm:whitespace-normal text-xl font-black text-gray-600 hover:text-yellow-500\">\n                                {feedData.fetchSuccess &&\n                                    feedData.data.Position &&\n                                    feedData.data.Profile &&\n                                    feedData.data.Profile.name}\n                            </div>\n                            <div className=\"text-gray-600 hover:text-yellow-500 font-black text-3xl \">\n                                {feedData.fetchSuccess &&\n                                    feedData.data.Position &&\n                                    feedData.data.Position[0] &&\n                                    feedData.data.Position[0].name}\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"flex mt-6 lg:mt-0 items-center lg:items-start flex-1 flex-col justify-center text-gray-600 px-5 border-l border-r border-gray-200 border-t lg:border-t-0 pt-5 lg:pt-0\">\n                        <div className=\"truncate sm:whitespace-normal flex items-center text-gray-600 hover:text-yellow-500 font-black\">\n                            <i className=\"w-4 h-4 mr-2 fas fa-user-tie\"></i>\n                            Name:{\" \"}\n                            {feedData.fetchSuccess &&\n                                feedData.data.Position &&\n                                feedData.data.Profile &&\n                                feedData.data.Profile.name}\n                        </div>\n                        <div className=\"truncate sm:whitespace-normal flex items-center mt-3 text-gray-600 hover:text-yellow-500 font-black\">\n                            <i className=\"w-4 h-4 mr-2 fas fa-envelope\"></i>{\" \"}\n                            E-mail:{\" \"}\n                            {feedData.fetchSuccess &&\n                                feedData.data.Position &&\n                                feedData.data.Profile &&\n                                feedData.data.Profile.email}\n                        </div>\n                        <div className=\"truncate sm:whitespace-normal flex items-center mt-3 text-gray-600 hover:text-yellow-500 font-black\">\n                            <i className=\"w-4 h-4 mr-2 fas fa-child\"></i>{\" \"}\n                            position:{\" \"}\n                            {feedData.fetchSuccess &&\n                                feedData.data.Position &&\n                                feedData.data.Position[0] &&\n                                feedData.data.Position[0].name}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"nav-tabs flex flex-col sm:flex-row justify-center lg:justify-start\">\n                    <a\n                        data-toggle=\"tab\"\n                        data-target=\"#profile\"\n                        href=\"javascript:;\"\n                        className=\"py-4 sm:mr-8 flex items-center active\"\n                    >\n                        <i className=\"w-4 h-4 mr-2 far fa-address-card\"></i>{\" \"}\n                        Edit Profile\n                    </a>\n                    <a\n                        data-toggle=\"tab\"\n                        data-target=\"#Password\"\n                        href=\"javascript:;\"\n                        className=\"py-4 sm:mr-8 flex items-center\"\n                    >\n                        <i className=\"w-4 h-4 mr-2 fas fa-key\"></i>{\"    \"}\n                        Edit Password2\n                    </a>\n                </div>\n\n\n\n                <div className=\"tab-content \">\n                    <div className=\"tab-content__pane active\" id=\"profile\" >\n                        <div className=\"m-5 p-5 w-3/4 bg-white  rounded-lg justify-center shadow-sm hover:shadow-2xl transition duration-500 ease-in-out transform hover:-translate-y-2 hover:scale-105\">\n                        <EditProfile />\n                        </div>\n                    </div>\n\n                    <div className=\"tab-content__pane\" id=\"Password\">\n                        <div className=\"m-5 p-5 w-3/4 bg-white  rounded-lg justify-center shadow-sm hover:shadow-2xl transition duration-500 ease-in-out transform hover:-translate-y-2 hover:scale-105\">\n\n                        <div className=\"text-gray-600 hover:text-yellow-500 font-black text-3xl mt-5\">\n                        Edit Password\n                        </div>\n                        <form\n                                        className=\"form-horizontal p-10\"\n                                        onSubmit={handleSubmit(\n                                            OnSubmitEditPassword\n                                        )}\n                                    >\n                                        <div className=\"form-group\">\n                                            <label\n                                                htmlFor=\"OldPassword\"\n                                                className=\"col-sm-2 control-label text-gray-600 hover:text-yellow-500\"\n                                            >\n                                                Old Password:\n                                            </label>\n                                            <div className=\"col-sm-9\">\n                                                <div className=\"mt-1 relative rounded-md \">\n                                                    <div className=\"absolute inset-y-0  right-6 pr-3 w-2/4 flex items-center\">\n                                                        <span\n                                                            onClick={() => {\n                                                                setpasswordeye(\n                                                                    (state) => {\n                                                                        return !state;\n                                                                    }\n                                                                );\n                                                            }}\n                                                            className=\"h-5 w-5 text-gray-400\"\n                                                        >\n                                                            <i\n                                                                className={`fas fa-${\n                                                                    passwordeye\n                                                                        ? \"eye-slash\"\n                                                                        : \"eye\"\n                                                                }`}\n                                                            />\n                                                        </span>\n                                                    </div>\n\n                                                    <input\n                                                        ref={register({\n                                                            required: true,\n                                                        })}\n                                                        type={\n                                                            passwordeye\n                                                                ? \"text\"\n                                                                : \"password\"\n                                                        }\n                                                        className=\"input w-2/4 border mt-2\"\n                                                        id=\"OldPassword\"\n                                                        name=\"OldPassword\"\n                                                        autoComplete=\"off\"\n                                                        placeholder=\"Old Password\"\n                                                    ></input>\n                                                </div>\n                                                {errors.OldPassword?.type ===\n                                                    \"required\" && (\n                                                    <ErrorSpan className=\"\">\n                                                        {\n                                                            ErrorsWord\n                                                                .OldPassword\n                                                                .required\n                                                        }\n                                                    </ErrorSpan>\n                                                )}\n                                            </div>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label\n                                                htmlFor=\"NewPassword\"\n                                                className=\"col-sm-2 control-label text-gray-600 hover:text-yellow-500\"\n                                            >\n                                                New Password:\n                                            </label>\n                                            <div className=\"col-sm-9\">\n                                                <div className=\"mt-1 relative rounded-md \">\n                                                    <div className=\"absolute inset-y-0  right-6 pr-3 w-2/4 flex items-center\">\n                                                        <span\n                                                            onClick={() => {\n                                                                setpasswordeye(\n                                                                    (state) => {\n                                                                        return !state;\n                                                                    }\n                                                                );\n                                                            }}\n                                                            className=\"h-5 w-5 text-gray-400\"\n                                                        >\n                                                            <i\n                                                                className={`fas fa-${\n                                                                    passwordeye\n                                                                        ? \"eye-slash\"\n                                                                        : \"eye\"\n                                                                }`}\n                                                            />\n                                                        </span>\n                                                    </div>\n                                                    <input\n                                                        autoComplete=\"off\"\n                                                        ref={register({\n                                                            required: true,\n                                                        })}\n                                                        type={\n                                                            passwordeye\n                                                                ? \"text\"\n                                                                : \"password\"\n                                                        }\n                                                        className=\"input w-2/4 border mt-2\"\n                                                        id=\"NewPassword\"\n                                                        name=\"NewPassword\"\n                                                        placeholder=\"New Password\"\n                                                    ></input>\n                                                </div>\n                                                {errors.NewPassword?.type ===\n                                                    \"required\" && (\n                                                    <ErrorSpan className=\"\">\n                                                        {\n                                                            ErrorsWord\n                                                                .NewPassword\n                                                                .required\n                                                        }\n                                                    </ErrorSpan>\n                                                )}\n                                            </div>\n                                        </div>\n\n                                        <div className=\"form-group\">\n                                            <label\n                                                htmlFor=\"Confirm\"\n                                                className=\"col-sm-2 control-label text-gray-600 hover:text-yellow-500\"\n                                            >\n                                                New Password (Confirm):\n                                            </label>\n                                            <div className=\"col-sm-9\">\n                                                <div className=\"mt-1 relative rounded-md \">\n                                                    <div className=\"absolute inset-y-0  right-6 pr-3 w-2/4 flex items-center\">\n                                                        <span\n                                                            onClick={() => {\n                                                                setpasswordeye(\n                                                                    (state) => {\n                                                                        return !state;\n                                                                    }\n                                                                );\n                                                            }}\n                                                            className=\"h-5 w-5 text-gray-400\"\n                                                        >\n                                                            <i\n                                                                className={`fas fa-${\n                                                                    passwordeye\n                                                                        ? \"eye-slash\"\n                                                                        : \"eye\"\n                                                                }`}\n                                                            />\n                                                        </span>\n                                                    </div>\n                                                    <input\n                                                        autoComplete=\"off\"\n                                                        ref={register({\n                                                            required: true,\n                                                        })}\n                                                        type={\n                                                            passwordeye\n                                                                ? \"text\"\n                                                                : \"password\"\n                                                        }\n                                                        className=\"input w-2/4 border mt-2\"\n                                                        id=\"Confirm\"\n                                                        name=\"Confirm\"\n                                                        placeholder=\"New Password (Confirm)\"\n                                                    ></input>\n                                                </div>\n                                                {errors.Confirm?.type ===\n                                                    \"required\" && (\n                                                    <ErrorSpan className=\"\">\n                                                        {\n                                                            ErrorsWord.Confirm\n                                                                .required\n                                                        }\n                                                    </ErrorSpan>\n                                                )}\n                                            </div>\n                                        </div>\n\n                                        <div className=\"form-group\">\n                                            <div className=\"col-sm-offset-2 col-sm-10\">\n                                                <button\n                                                    type=\"submit\"\n                                                    className=\"button bg-theme-1 hover:bg-red-500 text-white mt-5\"\n                                                >\n                                                    Submit\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </form>\n\n                        </div>\n                    </div>\n\n\n                </div>\n                <br></br><br></br><br></br>\n\n\n\n\n            </div>\n        </div>\n    );\n}\nexport default Profile;\n\nconst ErrorSpan = ({ children, className }) => {\n    return (\n        <span className={`text-red-500 hover: text-yellow-500 ${className && className} `}>\n            {\" \"}\n            {children && children}\n        </span>\n    );\n};\n"],"sourceRoot":""}