{"version":3,"sources":["webpack://soat-maintain/./resources/js/src/Officer/pages/Login/Login.js","webpack://soat-maintain/./node_modules/toastr/toastr.js"],"names":["Login","useState","user","setUser","pass","setPass","dispatch","useDispatch","authentication","useSelector","state","history","useHistory","useEffect","loggedIn","push","handleSubmit","e","preventDefault","toastr","event","target","value"],"mappings":"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A;AACA;AACA;AACA;AACA,+CAA+C,4BAA4B;AAC3E,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,QAAQ;AACxC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,+CAA+C,QAAQ;;AAEvD;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,6CAA6C;AAC7C,8CAA8C;AAC9C,6CAA6C;AAC7C,4CAA4C;AAC5C,4CAA4C;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB;;AAEA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC;AAClC;;AAEA;AACA,kCAAkC,6BAA6B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS;AACT,KAAK;AAAA,kGAAC;AACN,CAAC,CAAC,wBAMD","file":"js/resources_js_src_Officer_pages_Login_Login_js.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n// import { history } from \"../../../helpers\";\nimport toastr from \"toastr\";\n// import { login } from '../actions';\n\nimport { userActions } from \"../../redux/actions\";\n\nconst Login = () => {\n    const [user, setUser] = useState();\n    const [pass, setPass] = useState();\n\n    const dispatch = useDispatch();\n\n    const authentication = useSelector((state) => state.authentication);\n    let history = useHistory();\n\n    useEffect(() => {\n        if (authentication.loggedIn) {\n            history.push(\"/officer/home\");\n        }\n    }, [authentication, history]);\n\n    let handleSubmit = (e) => {\n        e.preventDefault();\n        toastr.info(\"Are you the 6 fingered man?\\n dfmadskfmsd;flmsdflsad; \\n adkfadskfl;sdk;l\");\n        // dispatch(userActions.login(user, pass));\n    };\n\n    return (\n        <div className=\"login-box login-page\">\n            <div className=\"login-logo\">\n                <a href=\"../../index2.html\">\n                    <b>Soat</b>Officer\n                </a>\n            </div>\n            {/* /.login-logo */}\n            <div className=\"login-box-body\">\n                <p className=\"login-box-msg\">Sign in to start your session </p>\n                <form onSubmit={(e) => handleSubmit(e)}>\n                    <div className=\"form-group has-feedback\">\n                        <input\n                            type=\"email\"\n                            onChange={(event) => setUser(event.target.value)}\n                            className=\"form-control\"\n                            placeholder=\"Email\"\n                            required\n                        />\n                        <span className=\"glyphicon glyphicon-envelope form-control-feedback\" />\n                    </div>\n                    <div className=\"form-group has-feedback\">\n                        <input\n                            type=\"password\"\n                            onChange={(event) => setPass(event.target.value)}\n                            className=\"form-control\"\n                            placeholder=\"Password\"\n                            required\n                        />\n                        <span className=\"glyphicon glyphicon-lock form-control-feedback\" />\n                    </div>\n                    <div className=\"row\">\n                        {/* <div className=\"col-xs-8\">\n                        <div className=\"checkbox icheck\">\n                            <label>\n                            <input type=\"checkbox\" /> Remember Me\n                            </label>\n                        </div>\n                        </div> */}\n                        {/* /.col */}\n                        <div className=\"col-xs-4\">\n                            <button\n                                type=\"submit\"\n                                className=\"btn btn-primary btn-block btn-flat\"\n                            >\n                                Sign In\n                            </button>\n                        </div>\n                        {/* /.col */}\n                    </div>\n                </form>\n                {/* <div className=\"social-auth-links text-center\">\n                <p>- OR -</p>\n                <a href=\"#\" className=\"btn btn-block btn-social btn-facebook btn-flat\"><i className=\"fa fa-facebook\" /> Sign in using\n                    Facebook</a>\n                <a href=\"#\" className=\"btn btn-block btn-social btn-google btn-flat\"><i className=\"fa fa-google-plus\" /> Sign in using\n                    Google+</a>\n                </div> */}\n                {/* /.social-auth-links */}\n                {/* <a href=\"#\">I forgot my password</a><br />\n                <a href=\"register.html\" className=\"text-center\">Register a new membership</a> */}\n            </div>\n        </div>\n    );\n};\n\nexport default Login;\n","/*\n * Toastr\n * Copyright 2012-2015\n * Authors: John Papa, Hans Fj√§llemark, and Tim Ferrell.\n * All Rights Reserved.\n * Use, reproduction, distribution, and modification of this code is subject to the terms and\n * conditions of the MIT license, available at http://www.opensource.org/licenses/mit-license.php\n *\n * ARIA Support: Greta Krafsig\n *\n * Project: https://github.com/CodeSeven/toastr\n */\n/* global define */\n(function (define) {\n    define(['jquery'], function ($) {\n        return (function () {\n            var $container;\n            var listener;\n            var toastId = 0;\n            var toastType = {\n                error: 'error',\n                info: 'info',\n                success: 'success',\n                warning: 'warning'\n            };\n\n            var toastr = {\n                clear: clear,\n                remove: remove,\n                error: error,\n                getContainer: getContainer,\n                info: info,\n                options: {},\n                subscribe: subscribe,\n                success: success,\n                version: '2.1.4',\n                warning: warning\n            };\n\n            var previousToast;\n\n            return toastr;\n\n            ////////////////\n\n            function error(message, title, optionsOverride) {\n                return notify({\n                    type: toastType.error,\n                    iconClass: getOptions().iconClasses.error,\n                    message: message,\n                    optionsOverride: optionsOverride,\n                    title: title\n                });\n            }\n\n            function getContainer(options, create) {\n                if (!options) { options = getOptions(); }\n                $container = $('#' + options.containerId);\n                if ($container.length) {\n                    return $container;\n                }\n                if (create) {\n                    $container = createContainer(options);\n                }\n                return $container;\n            }\n\n            function info(message, title, optionsOverride) {\n                return notify({\n                    type: toastType.info,\n                    iconClass: getOptions().iconClasses.info,\n                    message: message,\n                    optionsOverride: optionsOverride,\n                    title: title\n                });\n            }\n\n            function subscribe(callback) {\n                listener = callback;\n            }\n\n            function success(message, title, optionsOverride) {\n                return notify({\n                    type: toastType.success,\n                    iconClass: getOptions().iconClasses.success,\n                    message: message,\n                    optionsOverride: optionsOverride,\n                    title: title\n                });\n            }\n\n            function warning(message, title, optionsOverride) {\n                return notify({\n                    type: toastType.warning,\n                    iconClass: getOptions().iconClasses.warning,\n                    message: message,\n                    optionsOverride: optionsOverride,\n                    title: title\n                });\n            }\n\n            function clear($toastElement, clearOptions) {\n                var options = getOptions();\n                if (!$container) { getContainer(options); }\n                if (!clearToast($toastElement, options, clearOptions)) {\n                    clearContainer(options);\n                }\n            }\n\n            function remove($toastElement) {\n                var options = getOptions();\n                if (!$container) { getContainer(options); }\n                if ($toastElement && $(':focus', $toastElement).length === 0) {\n                    removeToast($toastElement);\n                    return;\n                }\n                if ($container.children().length) {\n                    $container.remove();\n                }\n            }\n\n            // internal functions\n\n            function clearContainer (options) {\n                var toastsToClear = $container.children();\n                for (var i = toastsToClear.length - 1; i >= 0; i--) {\n                    clearToast($(toastsToClear[i]), options);\n                }\n            }\n\n            function clearToast ($toastElement, options, clearOptions) {\n                var force = clearOptions && clearOptions.force ? clearOptions.force : false;\n                if ($toastElement && (force || $(':focus', $toastElement).length === 0)) {\n                    $toastElement[options.hideMethod]({\n                        duration: options.hideDuration,\n                        easing: options.hideEasing,\n                        complete: function () { removeToast($toastElement); }\n                    });\n                    return true;\n                }\n                return false;\n            }\n\n            function createContainer(options) {\n                $container = $('<div/>')\n                    .attr('id', options.containerId)\n                    .addClass(options.positionClass);\n\n                $container.appendTo($(options.target));\n                return $container;\n            }\n\n            function getDefaults() {\n                return {\n                    tapToDismiss: true,\n                    toastClass: 'toast',\n                    containerId: 'toast-container',\n                    debug: false,\n\n                    showMethod: 'fadeIn', //fadeIn, slideDown, and show are built into jQuery\n                    showDuration: 300,\n                    showEasing: 'swing', //swing and linear are built into jQuery\n                    onShown: undefined,\n                    hideMethod: 'fadeOut',\n                    hideDuration: 1000,\n                    hideEasing: 'swing',\n                    onHidden: undefined,\n                    closeMethod: false,\n                    closeDuration: false,\n                    closeEasing: false,\n                    closeOnHover: true,\n\n                    extendedTimeOut: 1000,\n                    iconClasses: {\n                        error: 'toast-error',\n                        info: 'toast-info',\n                        success: 'toast-success',\n                        warning: 'toast-warning'\n                    },\n                    iconClass: 'toast-info',\n                    positionClass: 'toast-top-right',\n                    timeOut: 5000, // Set timeOut and extendedTimeOut to 0 to make it sticky\n                    titleClass: 'toast-title',\n                    messageClass: 'toast-message',\n                    escapeHtml: false,\n                    target: 'body',\n                    closeHtml: '<button type=\"button\">&times;</button>',\n                    closeClass: 'toast-close-button',\n                    newestOnTop: true,\n                    preventDuplicates: false,\n                    progressBar: false,\n                    progressClass: 'toast-progress',\n                    rtl: false\n                };\n            }\n\n            function publish(args) {\n                if (!listener) { return; }\n                listener(args);\n            }\n\n            function notify(map) {\n                var options = getOptions();\n                var iconClass = map.iconClass || options.iconClass;\n\n                if (typeof (map.optionsOverride) !== 'undefined') {\n                    options = $.extend(options, map.optionsOverride);\n                    iconClass = map.optionsOverride.iconClass || iconClass;\n                }\n\n                if (shouldExit(options, map)) { return; }\n\n                toastId++;\n\n                $container = getContainer(options, true);\n\n                var intervalId = null;\n                var $toastElement = $('<div/>');\n                var $titleElement = $('<div/>');\n                var $messageElement = $('<div/>');\n                var $progressElement = $('<div/>');\n                var $closeElement = $(options.closeHtml);\n                var progressBar = {\n                    intervalId: null,\n                    hideEta: null,\n                    maxHideTime: null\n                };\n                var response = {\n                    toastId: toastId,\n                    state: 'visible',\n                    startTime: new Date(),\n                    options: options,\n                    map: map\n                };\n\n                personalizeToast();\n\n                displayToast();\n\n                handleEvents();\n\n                publish(response);\n\n                if (options.debug && console) {\n                    console.log(response);\n                }\n\n                return $toastElement;\n\n                function escapeHtml(source) {\n                    if (source == null) {\n                        source = '';\n                    }\n\n                    return source\n                        .replace(/&/g, '&amp;')\n                        .replace(/\"/g, '&quot;')\n                        .replace(/'/g, '&#39;')\n                        .replace(/</g, '&lt;')\n                        .replace(/>/g, '&gt;');\n                }\n\n                function personalizeToast() {\n                    setIcon();\n                    setTitle();\n                    setMessage();\n                    setCloseButton();\n                    setProgressBar();\n                    setRTL();\n                    setSequence();\n                    setAria();\n                }\n\n                function setAria() {\n                    var ariaValue = '';\n                    switch (map.iconClass) {\n                        case 'toast-success':\n                        case 'toast-info':\n                            ariaValue =  'polite';\n                            break;\n                        default:\n                            ariaValue = 'assertive';\n                    }\n                    $toastElement.attr('aria-live', ariaValue);\n                }\n\n                function handleEvents() {\n                    if (options.closeOnHover) {\n                        $toastElement.hover(stickAround, delayedHideToast);\n                    }\n\n                    if (!options.onclick && options.tapToDismiss) {\n                        $toastElement.click(hideToast);\n                    }\n\n                    if (options.closeButton && $closeElement) {\n                        $closeElement.click(function (event) {\n                            if (event.stopPropagation) {\n                                event.stopPropagation();\n                            } else if (event.cancelBubble !== undefined && event.cancelBubble !== true) {\n                                event.cancelBubble = true;\n                            }\n\n                            if (options.onCloseClick) {\n                                options.onCloseClick(event);\n                            }\n\n                            hideToast(true);\n                        });\n                    }\n\n                    if (options.onclick) {\n                        $toastElement.click(function (event) {\n                            options.onclick(event);\n                            hideToast();\n                        });\n                    }\n                }\n\n                function displayToast() {\n                    $toastElement.hide();\n\n                    $toastElement[options.showMethod](\n                        {duration: options.showDuration, easing: options.showEasing, complete: options.onShown}\n                    );\n\n                    if (options.timeOut > 0) {\n                        intervalId = setTimeout(hideToast, options.timeOut);\n                        progressBar.maxHideTime = parseFloat(options.timeOut);\n                        progressBar.hideEta = new Date().getTime() + progressBar.maxHideTime;\n                        if (options.progressBar) {\n                            progressBar.intervalId = setInterval(updateProgress, 10);\n                        }\n                    }\n                }\n\n                function setIcon() {\n                    if (map.iconClass) {\n                        $toastElement.addClass(options.toastClass).addClass(iconClass);\n                    }\n                }\n\n                function setSequence() {\n                    if (options.newestOnTop) {\n                        $container.prepend($toastElement);\n                    } else {\n                        $container.append($toastElement);\n                    }\n                }\n\n                function setTitle() {\n                    if (map.title) {\n                        var suffix = map.title;\n                        if (options.escapeHtml) {\n                            suffix = escapeHtml(map.title);\n                        }\n                        $titleElement.append(suffix).addClass(options.titleClass);\n                        $toastElement.append($titleElement);\n                    }\n                }\n\n                function setMessage() {\n                    if (map.message) {\n                        var suffix = map.message;\n                        if (options.escapeHtml) {\n                            suffix = escapeHtml(map.message);\n                        }\n                        $messageElement.append(suffix).addClass(options.messageClass);\n                        $toastElement.append($messageElement);\n                    }\n                }\n\n                function setCloseButton() {\n                    if (options.closeButton) {\n                        $closeElement.addClass(options.closeClass).attr('role', 'button');\n                        $toastElement.prepend($closeElement);\n                    }\n                }\n\n                function setProgressBar() {\n                    if (options.progressBar) {\n                        $progressElement.addClass(options.progressClass);\n                        $toastElement.prepend($progressElement);\n                    }\n                }\n\n                function setRTL() {\n                    if (options.rtl) {\n                        $toastElement.addClass('rtl');\n                    }\n                }\n\n                function shouldExit(options, map) {\n                    if (options.preventDuplicates) {\n                        if (map.message === previousToast) {\n                            return true;\n                        } else {\n                            previousToast = map.message;\n                        }\n                    }\n                    return false;\n                }\n\n                function hideToast(override) {\n                    var method = override && options.closeMethod !== false ? options.closeMethod : options.hideMethod;\n                    var duration = override && options.closeDuration !== false ?\n                        options.closeDuration : options.hideDuration;\n                    var easing = override && options.closeEasing !== false ? options.closeEasing : options.hideEasing;\n                    if ($(':focus', $toastElement).length && !override) {\n                        return;\n                    }\n                    clearTimeout(progressBar.intervalId);\n                    return $toastElement[method]({\n                        duration: duration,\n                        easing: easing,\n                        complete: function () {\n                            removeToast($toastElement);\n                            clearTimeout(intervalId);\n                            if (options.onHidden && response.state !== 'hidden') {\n                                options.onHidden();\n                            }\n                            response.state = 'hidden';\n                            response.endTime = new Date();\n                            publish(response);\n                        }\n                    });\n                }\n\n                function delayedHideToast() {\n                    if (options.timeOut > 0 || options.extendedTimeOut > 0) {\n                        intervalId = setTimeout(hideToast, options.extendedTimeOut);\n                        progressBar.maxHideTime = parseFloat(options.extendedTimeOut);\n                        progressBar.hideEta = new Date().getTime() + progressBar.maxHideTime;\n                    }\n                }\n\n                function stickAround() {\n                    clearTimeout(intervalId);\n                    progressBar.hideEta = 0;\n                    $toastElement.stop(true, true)[options.showMethod](\n                        {duration: options.showDuration, easing: options.showEasing}\n                    );\n                }\n\n                function updateProgress() {\n                    var percentage = ((progressBar.hideEta - (new Date().getTime())) / progressBar.maxHideTime) * 100;\n                    $progressElement.width(percentage + '%');\n                }\n            }\n\n            function getOptions() {\n                return $.extend({}, getDefaults(), toastr.options);\n            }\n\n            function removeToast($toastElement) {\n                if (!$container) { $container = getContainer(); }\n                if ($toastElement.is(':visible')) {\n                    return;\n                }\n                $toastElement.remove();\n                $toastElement = null;\n                if ($container.children().length === 0) {\n                    $container.remove();\n                    previousToast = undefined;\n                }\n            }\n\n        })();\n    });\n}(typeof define === 'function' && define.amd ? define : function (deps, factory) {\n    if (typeof module !== 'undefined' && module.exports) { //Node\n        module.exports = factory(require('jquery'));\n    } else {\n        window.toastr = factory(window.jQuery);\n    }\n}));\n"],"sourceRoot":""}